################################################################################
# WEB PARAMETERS
################################################################################
# The port to expose the web container on
WEB_PORT=8080

################################################################################
# ZINC SERVER PARAMETERS
################################################################################
# WARNING: ZINC_ADMIN_USER and ZINC_ADMIN_PASSWORD can only be changed in
# the first run of the container, as the zinc server will create the admin
# user on the first run and will not allow it to be changed afterwards
# To change them, the zinc container must be deleted and recreated
# (however, its attached volume can be kept)
ZINC_ADMIN_USER=admin
ZINC_ADMIN_PASSWORD=Complexpass#123
# docker-compose.yml determines this
ZINC_HOST=zinc 
ZINC_PORT=4080
# The retry interval to try to connect to the Zinc server (in seconds)
# The entrypoint script uses this to wait for the Zinc server to start
ZINC_RETRY_INTERVAL=5

################################################################################
# INDEXING PARAMETERS
################################################################################
# The directory where the emails to be indexed are stored
# not really suppossed to be changed unless the mounted volume is changed
EMAILS_DIR=emails
# Remove the index if it already exists
REMOVE_INDEX_IF_EXISTS=false
# Prevents the indexer from indexing emails if the index already exists
# Useful for container restarts if the attached volumes aren't deleted
# Careful when using the REMOVE_INDEX_IF_EXISTS flag, as the uploading occurs
# after the index is removed, so this will be ignored
SKIP_UPLOAD_IF_INDEX_EXISTS=true
# .indexer.env should override REMOVE_INDEX_IF_EXISTS and
# SKIP_UPLOAD_IF_INDEX_EXISTS

################################################################################
# PROFILING PARAMETERS
################################################################################
# Enable the go profiling server, exposed on the PROFILING_PORT (see below)
ENABLE_PROFILING=false
API_ENABLE_PROFILING=false
INDEXER_ENABLE_PROFILING=false
# unless using docker-compose.yml, the indexer binary will use ENABLE_PROFILING
# docker-compose.yml overrides this to use the container-specific flags

# Port to expose the profiling server on
PROFILING_PORT=6060
INDEXER_PROFILING_PORT=6060 # For the indexer container
API_PROFILING_PORT=6061     # For the api container
# unless using docker-compose.yml, the indexer binary will use PROFILING_PORT
# docker-compose.yml overrides this to use the container-specific ports

################################################################################
# API PARAMETERS
################################################################################
# Port to expose the REST API on
API_PORT=3000

################################################################################
# INDEXING FINE TUNNING PARAMETERS (adjust to performance)
################################################################################
# The number of goroutines to use for parsing emails (from file to json)
NUM_PARSER_WORKERS=128
# The number of goroutines to use for uploading to zinc
NUM_UPLOADER_WORKERS=32
# The number of emails sent to zinc in a single bulk upload
BULK_UPLOAD_SIZE=5000
